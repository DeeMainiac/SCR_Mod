<?xml version="1.0" encoding="utf-8" ?>
<Defs>

  <QuestScriptDef>
    <defName>SCR_AbandContainFacilQuest</defName>
    <rootSelectionWeight>1.0</rootSelectionWeight>
    <rootMinPoints>300</rootMinPoints>
    <canGiveRoyalFavor>true</canGiveRoyalFavor>
	 <autoAccept>true</autoAccept>
    <successHistoryEvent MayRequire="Ludeon.RimWorld.Ideology">Raided_BanditCamp</successHistoryEvent>
    <questNameRules>
      <rulesStrings>
        <li>questName->Abandoned Containment Facility</li>
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription->[asker_nameFull], [asker_faction_leaderTitle] of [asker_faction_name], has sent us a message. Apparently, an abandoned SCP containment facility has been discovered nearby.
\n[asker_nameDef] is asking us to investigate why it was abandoned, and to destroy any live SCPs we may find there. [asker_label] says that [sitePart0_description].</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="QuestNode_Sequence">
      <nodes>
        <li Class="QuestNode_SubScript">
          <def>Util_RandomizePointsChallengeRating</def>
          <parms>
            <pointsFactorTwoStar>1.5</pointsFactorTwoStar>
            <pointsFactorThreeStar>2</pointsFactorThreeStar>
          </parms>
        </li>
        <li Class="QuestNode_SubScript">
          <def>Util_AdjustPointsForDistantFight</def>
        </li>
        <li Class="QuestNode_GetMap" />

        <li Class="QuestNode_GetPawn">
          <storeAs>asker</storeAs>
          <mustBeFactionLeader>true</mustBeFactionLeader>
          <allowPermanentEnemyFaction>false</allowPermanentEnemyFaction>
          <hostileWeight>0.15</hostileWeight>
        </li>

        <li Class="QuestNode_GetSiteTile">
          <storeAs>siteTile</storeAs>
          <preferCloserTiles>true</preferCloserTiles>
        </li>

        <li Class="QuestNode_GetSitePartDefsByTagsAndFaction">
          <storeAs>sitePartDefs</storeAs>
          <storeFactionAs>siteFaction</storeFactionAs>
          <sitePartsTags>
            <li><tag>SCR_ContainmentFacility</tag></li>
          </sitePartsTags>
          <mustBeHostileToFactionOf>$asker</mustBeHostileToFactionOf>
        </li>

        <li Class="QuestNode_GetDefaultSitePartsParams">
          <tile>$siteTile</tile>
          <faction>$siteFaction</faction>
          <sitePartDefs>$sitePartDefs</sitePartDefs>
          <storeSitePartsParamsAs>sitePartsParams</storeSitePartsParamsAs>
        </li>
        
        <li Class="QuestNode_GetSiteThreatPoints">
          <storeAs>sitePoints</storeAs>
          <sitePartsParams>$sitePartsParams</sitePartsParams>
        </li>
        <li Class="QuestNode_SubScript">
          <def>Util_GetDefaultRewardValueFromPoints</def>
          <parms>
            <!-- Use the actual threat points generated (some site parts define a minimum threshold) -->
            <points>$sitePoints</points>
          </parms>
        </li>

        <!-- Inflate reward value. Since we're basing the reward value on the threat points generated, we need to do this
             even though the threat points was deflated from the input points already. -->
        <li Class="QuestNode_Multiply">
            <value1>$rewardValue</value1>
            <value2>1.75</value2>
            <storeAs>rewardValue</storeAs>
        </li>

        <li Class="QuestNode_SubScript">
          <def>Util_GenerateSite</def>
        </li>
        
        <li Class="QuestNode_SpawnWorldObjects">
          <worldObjects>$site</worldObjects>
        </li>

        <li Class="QuestNode_WorldObjectTimeout">
          <worldObject>$site</worldObject>
          <isQuestTimeout>true</isQuestTimeout>
          <delayTicks>$(randInt(12,28)*60000)</delayTicks>
          <inSignalDisable>site.MapGenerated</inSignalDisable>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelQuestExpired">Quest expired: [resolvedQuestName]</label>
                <text TKey="LetterTextQuestExpired">Someone else has cleared the facility. The quest [resolvedQuestName] has expired.</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
              </li>
            </nodes>
          </node>
        </li>

        <!-- If we enter and leave, the map is destroyed. Fail the quest. -->
        <li Class="QuestNode_Signal">
          <inSignal>site.Destroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelQuestFailed">Quest failed: [resolvedQuestName]</label>
                <text TKey="LetterTextQuestFailed">After being opened, any SCPs inside have fled into the wilderness. The quest [resolvedQuestName] has ended.</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
              </li>
            </nodes>
          </node>
        </li>

        <li Class="QuestNode_Signal">
          <inSignal>site.AllEnemiesDefeated</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Notify_PlayerRaidedSomeone">
                <getRaidersFromMapParent>$site</getRaidersFromMapParent>
              </li>
              <li Class="QuestNode_GiveRewards">
                <parms>
                  <allowGoodwill>true</allowGoodwill>
                  <allowRoyalFavor>true</allowRoyalFavor>
                  <chosenPawnSignal>ChosenPawnForReward</chosenPawnSignal>
                </parms>
                <addCampLootReward>true</addCampLootReward>
                <customLetterLabel TKey="LetterLabelPaymentArrived">Payment arrived</customLetterLabel>
                <customLetterText TKey="LetterTextPaymentArrived">You have investigated the SCP containment facility!\n\nThe payment from [asker_faction_name] has arrived.</customLetterText>
                <nodeIfChosenPawnSignalUsed Class="QuestNode_Letter">
                  <letterDef>ChoosePawn</letterDef>
                  <label TKey="LetterLabelFavorReceiver">[asker_faction_royalFavorLabel]</label>
                  <text TKey="LetterTextFavorReceiver">These colonists investigated the facility in the quest [resolvedQuestName]. [asker_definite] wants to know who should receive the [royalFavorReward_amount] [asker_faction_royalFavorLabel] for this service.</text>
                  <useColonistsOnMap>$site</useColonistsOnMap>
                  <chosenPawnSignal>ChosenPawnForReward</chosenPawnSignal>
                </nodeIfChosenPawnSignalUsed>
              </li>
            </nodes>
          </node>
        </li>
        <li Class="QuestNode_End">
          <inSignal>site.AllEnemiesDefeated</inSignal>
          <outcome>Success</outcome>
        </li>
      </nodes>
    </root>
  </QuestScriptDef>
</Defs>